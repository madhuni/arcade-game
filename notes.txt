image size is : 101*171

x increment will be of 101.
y increment will be of 85.

--> for the 2nd row of the game board the y increment should be 60px
--> for the 1st row of the game board the y increment should be -20px


/***** Appointement Notes *****/

// Link to understand the collision detection
https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection

// Live example
http://jsfiddle.net/knam8/

https://fend.slack.com/files/karol/F52KYUYRX/pasted_image_at_2017_04_23_07_59_pm.png

*drawBox collision detection bounding boxes*
https://discussions.udacity.com/t/how-to-pause-the-game/190398/6 

*Collision Detection based on bounding boxes/ rectangles*
https://discussions.udacity.com/t/struggling-with-collision-detection-in-the-classic-arcade-game-clone/227763/13 (edited)

*A Quick Guide to the Udacity Discussion Forum*
https://discussions.udacity.com/t/a-quick-guide-to-the-udacity-discussion-forum/175925 (edited)

https://discussions.udacity.com/c/nd001-classic-arcade-game-clone/classic-arcade-game-clone-project (edited)

// https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection
Enemy.prototype.checkCollision = function() {
    console.log("checkCollision");
};



//***** Requirements ******

When the player wins the reset function should reset the lifes to its initial length
x, y should be random and should decide on run time
Pause functionality needs to be added
Timer needs to be added


//***** Used codes in the project which are the temporary solutions ******

/*Player.prototype.displayLife = function () {
    for (var i = 0; i < this.lifeArray.length; i++) {
        var formattedLifeHeart = HTMLlifeHeart.replace('%data%', this.lifeArray[i]);
        $("#heartList:last").append(formattedLifeHeart);
    }
};
*/
// This function will reduce the life hearts and will display the reduced life on the game board
/*Player.prototype.lifeReducer = function () {
    var lastChild = $("ul li:last-child");
    $(lastChild).remove();
};*/


// Displaying the life of the player on the HTML page
// document.getElementById('life').textContent = player.life;
// player.displayLife();


// temporary Game Over functionality
/*Player.prototype.gameOver = function () {
    var bool = true;
    if (allLife.length === 0) {
        alert("YO LOSE !!!!");
        this.resetGame(bool);
    }
};*/


// temporary Win Game function
/*Player.prototype.resetGame = function (bool) {
    if (bool) {
        allLife.push(life1);
        allLife.push(life2);
        allLife.push(life3);
    } else {
        var count = allLife.length;
        var addCount = 3 - count;

        if (addCount === 1) {
            allLife.push(life3);
        } else if (addCount === 2) {
            allLife.push(life2);
            allLife.push(life3);
        }
    }
};*/